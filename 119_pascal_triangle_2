Pascal's Triangle II

Given an index k, return the kth row of the Pascal's triangle.
For example, given k = 3,
Return [1,3,3,1]. 
Note:
Could you optimize your algorithm to use only O(k) extra space? 

Code:

#1 Brute Foce:

class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> res;
        for (int i = 0; i <= rowIndex; ++i)
        {
            vector<int> vec(i+1,1);
            for (int j = 1; j < i; ++j)
                vec[j] = res[j-1] + res[j];
            res = vec;
        }
        return res;
    }
};

#2 Math: C_n^k

class Solution {
public:
    vector<int> getRow(int rowIndex) {
        if (rowIndex < 0)
            return vector<int>();
        vector<int> res(rowIndex+1, 1);
        long long cur = 1;
        for (int i = 1; i <= rowIndex/2; ++i)
        {
            cur *= rowIndex-i+1;
            cur /= i;
            res[i] = res[rowIndex-i] = cur;
        }
        return res;
    }
};
