Isomorphic Strings

Given two strings s and t, determine if they are isomorphic.
Two strings are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.
For example,
Given "egg", "add", return true.
Given "foo", "bar", return false.
Given "paper", "title", return true.
Note:
You may assume both s and t have the same length.

Code:

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        map<char, char> m;
        map<char, int> n;
        for (int i = 0; i < s.size(); ++i)
        {
            if (m.find(s[i]) == m.end())
            {
                if (n.find(t[i]) != n.end())
                    return 0;
                m[s[i]] = t[i];
                n[t[i]] = 1;
            }
            else
            {
                if (m[s[i]] != t[i])
                    return 0;
            }
        }
        return 1;
    }
};
