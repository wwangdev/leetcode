Valid Anagram

Given two strings s and t, write a function to determine if t is an anagram of s.
For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false. 
Note:
You may assume the string contains only lowercase alphabets.
Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?

Code:

class Solution {
public:
    bool isAnagram(string s, string t) {
        if (s.size() != t.size())
            return 0;
        int size = 256;
        vector<int> as(size);
        vector<int> at(size);
        for (int i = 0; i < s.size(); ++i)
        {
            ++as[s[i]];
            ++at[t[i]];
        }
        for (int i = 0; i < size; ++i)
        {
            if (as[i] != at[i])
                return 0;
        }
        return 1;
    }
};
