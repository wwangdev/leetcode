Min Stack

Design a stack that supports push, pop, top, and retrieving the minimum element in constant time. 
push(x) -- Push element x onto stack. 
pop() -- Removes the element on top of the stack. 
top() -- Get the top element. 
getMin() -- Retrieve the minimum element in the stack. 

Code:

class MinStack {
public:
    /** initialize your data structure here. */
    // use array instead of STL stack for practice
    vector<int> stackS;
    vector<int> stackMin;
    MinStack() {
        // init stackMin with INT_MAX before first push
        stackMin.push_back(INT_MAX);        
    }
    
    void push(int x) {
        stackS.push_back(x);
        stackMin.push_back(min(x, stackMin.back()));
    }
    
    void pop() {
        if (stackS.empty())
            return;
        stackS.pop_back();
        stackMin.pop_back();
    }
    
    int top() {
        return stackS.back();
    }
    
    int getMin() {
        return stackMin.back();
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
